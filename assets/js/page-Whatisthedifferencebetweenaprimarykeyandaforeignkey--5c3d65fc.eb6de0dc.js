(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{485:function(t,e,a){"use strict";a.r(e);var i=a(2),r=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"what-is-the-difference-between-a-primary-key-and-a-foreign-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-a-primary-key-and-a-foreign-key"}},[t._v("#")]),t._v(" What is the difference between a primary key and a foreign key")]),t._v(" "),a("h2",{attrs:{id:"a-primary-key-is-the-unique-identifier-for-the-current-sql-table-being-made-a-foreign-id-takes-the-id-of-the-foreign-property-you-have-made-to-create-a-relationship-and-will-reference-to-the-table-of-that-data-to-create-a-link"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-primary-key-is-the-unique-identifier-for-the-current-sql-table-being-made-a-foreign-id-takes-the-id-of-the-foreign-property-you-have-made-to-create-a-relationship-and-will-reference-to-the-table-of-that-data-to-create-a-link"}},[t._v("#")]),t._v(' A Primary key is the unique identifier for the current sql table being made. A foreign id takes the id of the "foreign" property you have made to create a relationship and will reference to the table of that data to create a link.')]),t._v(" "),a("h2",{attrs:{id:"what-is-an-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-an-alias"}},[t._v("#")]),t._v(" What is an Alias?")]),t._v(" "),a("h2",{attrs:{id:"an-alias-is-used-in-a-join-statement-so-you-can-reference-multiple-different-tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#an-alias-is-used-in-a-join-statement-so-you-can-reference-multiple-different-tables"}},[t._v("#")]),t._v(" An Alias is used in a join statement so you can reference multiple different tables.")]),t._v(" "),a("h2",{attrs:{id:"demonstrate-how-you-would-query-a-join-statement-that-would-get-all-of-a-doctors-patients-from-the-following-collections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#demonstrate-how-you-would-query-a-join-statement-that-would-get-all-of-a-doctors-patients-from-the-following-collections"}},[t._v("#")]),t._v(" Demonstrate how you would query a join statement that would get all of a doctors patients from the following collections:")]),t._v(" "),a("h2",{attrs:{id:"string-sql-selectp-d-from-patients-pjoin-doctors-d-on-p-id-d-patientidwhere-p-id-id-return-db-query-patient-doctor-patient-sql-patient-doctor-patient-doctor-doctor-return-patient-new-id-spliton-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-sql-selectp-d-from-patients-pjoin-doctors-d-on-p-id-d-patientidwhere-p-id-id-return-db-query-patient-doctor-patient-sql-patient-doctor-patient-doctor-doctor-return-patient-new-id-spliton-id"}},[t._v("#")]),t._v(' string sql = @"SELECT\np.'),a("em",[t._v(",\nd.")]),t._v('\nFROM patients p\nJOIN doctors d ON p.id = d.patientId\nWHERE p.id = @id;";\nreturn _db.Query<Patient, Doctor, Patient>(sql, (patient, doctor) => {\npatient.Doctor = doctor;\nreturn patient;\n} new { id }, splitOn: ("id"));')]),t._v(" "),a("h2",{attrs:{id:"link-to-daily-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link-to-daily-repository"}},[t._v("#")]),t._v(" link to daily repository")]),t._v(" "),a("p",[t._v("https://github.com/afoster44/CS-contractors-many2many")])])}),[],!1,null,null,null);e.default=r.exports}}]);